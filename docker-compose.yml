version: '3'
services:
  postgres-sql:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: grupod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 5
#    ports:
#      - 5432:5432
  proxy:
    image: traefik:v2.9.6
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    expose:
      - 80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  tracing:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - 14258:14258
  authors-service:
    image: d4vecode/app-authors-py:1.0.0
    restart: always
    environment:
      CONFIGURATION_SETUP: "config.DevelopmentConfig"
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@postgres-sql:5432/grupod"
      DB_USERNAME : postgres
      DB_PASSWORD : postgres
      DB_HOST : postgres-sql
      DB_PORT : 5432 
      DB_NAME : grupod
    depends_on:
      postgres-sql:
        condition: service_healthy
      proxy:
        condition: service_started

    command: "flask run --port 7001 --host 0.0.0.0"
    deploy:
      replicas: 2
    expose:
      - 7001
    labels:
       - "traefik.http.routers.authors-service.rule=Host(`localhost`)"
       - "traefik.http.routers.authors.rule=PathPrefix(`/app2`)"
       - "traefik.http.middlewares.authors.stripprefix.prefixes=/app2"
       - "traefik.http.routers.authors.middlewares=authors"
